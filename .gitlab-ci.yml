stages:
  - prep
  - build

prep:buildx:
  image: docker:git
  stage: prep
  variables:
    GIT_STRATEGY: none
  artifacts:
    paths:
      - buildx
    expire_in: 1 hour
  services:
    - docker:dind
  script:
    - export DOCKER_BUILDKIT=1
    - git clone https://github.com/docker/buildx.git ./docker-buildx
    - docker build --platform=local -o . ./docker-buildx
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - when: always

build:snapshot:
  stage: build
  image: docker
  needs:
    - job: prep:buildx
      artifacts: true
  services:
    - name: docker:dind
      command: ["--experimental"]
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - mv buildx ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
    - docker buildx build --platform linux/amd64,linux/arm64 --push -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" .
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - when: always

build:tag:
  stage: build
  image: docker
  needs:
    - job: prep:buildx
      artifacts: true
  services:
    - name: docker:dind
      command: ["--experimental"]
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - mv buildx ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
    - docker buildx build --platform linux/amd64,linux/arm64 --push -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" .
  rules:
    - if: $CI_COMMIT_TAG
